name: Cross
on:
  workflow_call:
    inputs:
      runs_on:
        type: string
        required: true
      target:
        type: string
        required: true
      arch:
        type: string
        required: true
      use-cross:
        default: false
        type: boolean
        required: false
jobs:
  crossbuild:
    name: Cross-build static binary
    runs-on: ${{ inputs.runs_on }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Setup rust toolchain
        run: rustup show
      - name: Restore cargo cache
        uses: Swatinem/rust-cache@v1
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6
      - name: Replace target string
        uses: mad9000/actions-find-and-replace-string@1
        id: findandreplace
        with:
          source: ${{ inputs.target }}
          find: "unknown-"
          replace: ""
      - name: Install dependencies
        run: |
          sudo sed -i 's/azure\.//' /etc/apt/sources.list
          sudo apt-get update
          echo "deb [arch=${{ inputs.arch }}] http://ports.ubuntu.com/ubuntu-ports focal main universe" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=${{ inputs.arch }}] http://ports.ubuntu.com/ubuntu-ports focal-updates main universe" | sudo tee -a /etc/apt/sources.list
          sudo apt update
          sudo dpkg --add-architecture ${{ inputs.arch }}
          sudo apt-get install -y libusb-1.0-0-dev libudev-dev musl-tools pkg-config "libgcc-s1:${{ inputs.arch }}" "libc6:${{ inputs.arch }}" "libudev1:${{ inputs.arch }}" "libudev-dev:${{ inputs.arch }}" "libftdi1-dev:${{ inputs.arch }}" "libusb-1.0-0-dev:${{ inputs.arch }}" gcc-arm-linux-gnueabihf pkg-config-arm-linux-gnueabihf gcc-aarch64-linux-gnu pkg-config-aarch64-linux-gnu
          echo "PKG_CONFIG_DIR=" >> $GITHUB_ENV
          echo "PKG_CONFIG_LIBDIR=/opt/usr/lib/pkgconfig:/opt/usr/share/pkgconfig" >> $GITHUB_ENV
          echo "PKG_CONFIG_SYSROOT_DIR=/opt" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          if [[ ${{ inputs.arch }} == arm64 ]]; then
            echo "PKG_CONFIG_PATH=/usr/lib/${{ steps.findandreplace.outputs.value }}/pkgconfig" >> $GITHUB_ENV
            echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=${{ steps.findandreplace.outputs.value }}-gcc" >> $GITHUB_ENV
          fi
          if [[ ${{ inputs.arch }} == armhf ]]; then
            echo "PKG_CONFIG_PATH=/usr/lib/arm-linux-gnueabihf/pkgconfig" >> $GITHUB_ENV
            echo "CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc" >> $GITHUB_ENV
          fi
          pkg-config --libs --cflags libudev
      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all --target ${{ inputs.target }}
          use-cross: ${{ inputs.use-cross }}
      - name: Bundle release
        run: tar -jcvf iceworx-${{ steps.branch-name.outputs.tag }}-${{ inputs.target }}.tar.gz -C target/${{ inputs.target }}/release/ iceworx
      - name: Upload release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: iceworx-${{ steps.branch-name.outputs.tag }}-${{ inputs.target }}.tar.gz
          tag: ${{ github.ref }}
          overwrite: true
